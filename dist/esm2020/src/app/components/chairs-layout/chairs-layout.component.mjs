import { Component } from '@angular/core';
import { FormArray, FormGroup, FormControl } from '@angular/forms';
import { fabric } from 'fabric';
import { FURNISHINGS } from '../../models/furnishings';
import { createShape, RL_FILL, RL_STROKE } from '../../helpers';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/material/radio";
import * as i3 from "../../shared/components/zoom/zoom.component";
import * as i4 from "@angular/material/form-field";
import * as i5 from "@angular/material/select";
import * as i6 from "@angular/material/core";
import * as i7 from "@angular/material/button";
import * as i8 from "@angular/forms";
import * as i9 from "@angular/common";
import * as i10 from "@angular/material/input";
const WIDTH = 1100, HEIGHT = 400;
export class ChairsLayoutComponent {
    constructor(dialogRef) {
        this.dialogRef = dialogRef;
        this.layoutOption = 'NORMAL';
        this.chairs = [];
        this.zoom = 100;
    }
    ngOnInit() {
        this.chairs = FURNISHINGS.chairs;
        this.rectBlock = new FormGroup({
            chair: new FormControl(0),
            rows: new FormControl(1),
            sections: new FormControl(1),
            chairs: new FormControl(12),
            spacing_chair: new FormControl(0),
            spacing_row: new FormControl(22),
            spacing_sections: new FormControl([1, 2, 3, 4].map(() => new FormControl(5)))
        });
        const array = [];
        for (let i = 0; i < 20; i++) {
            array.push(i);
        }
        this.curvedBlock = new FormGroup({
            chair: new FormControl(0),
            radius: new FormControl(200),
            angle: new FormControl(180),
            rows: new FormControl(1),
            spacing_row: new FormControl(40),
            chairs: new FormArray(new Array(10).fill(new FormControl(10))),
        });
        console.log(this.curvedBlock);
        this.view = new fabric.Canvas('layout_chairs');
        this.view.setWidth(WIDTH);
        this.view.setHeight(HEIGHT);
        this.rectBlock.valueChanges.subscribe(() => this.changeLayout());
        this.curvedBlock.valueChanges.subscribe(() => this.changeLayout());
        this.changeLayout();
    }
    layoutOptionChanged(value) {
        this.layoutOption = value;
        this.changeLayout();
    }
    changeLayout() {
        const chrs = [];
        if (this.layoutOption === 'CURVED') {
            const { radius, angle, rows, chair, spacing_row, chairs } = this.curvedBlock.value;
            const start = -(angle / 2);
            for (let r = 0; r < rows; r++) {
                const N = chairs[r], A = angle / N;
                const rad = radius + r * spacing_row;
                for (let i = 0; i <= N; i += 1) {
                    const ca = start + i * A;
                    const chr = createShape(this.chairs[chair], RL_STROKE, RL_FILL);
                    chr.angle = ca;
                    const x = Math.sin(this.toRadians(ca)) * rad;
                    const y = Math.cos(this.toRadians(ca)) * rad;
                    chr.left = x;
                    chr.top = -y;
                    chr.angle += 180;
                    chrs.push(chr);
                }
            }
        }
        else {
            const { rows, sections, chairs, spacing_chair, spacing_row, chair } = this.rectBlock.value;
            const total = rows * chairs;
            const cps = Math.floor(chairs / sections); // Chairs per section
            let x = 0, y = 0;
            for (let i = 1; i <= total; i++) {
                const chr = createShape(this.chairs[chair], RL_STROKE, RL_FILL);
                chr.left = x, chr.top = y;
                if (i % chairs === 0) {
                    y += (spacing_row + chr.height);
                    x = 0;
                }
                else {
                    x += (chr.width + spacing_chair);
                    const s = Math.floor(i % chairs / cps);
                    if (i % chairs % cps === 0 && s + 1 <= this.sections) {
                        x += this.rectBlock.value.spacing_sections[s - 1];
                    }
                }
                chrs.push(chr);
            }
        }
        this.view.clear();
        this.layout = new fabric.Group(chrs, {
            originX: 'center',
            originY: 'center',
            left: WIDTH / 2,
            top: HEIGHT / 2,
            selectable: false,
            name: 'BLOCK:Chairs',
            hasControls: false,
        });
        this.layout.scale(this.zoom / 100);
        this.view.add(this.layout);
        this.view.renderAll();
    }
    onZoom(value) {
        this.zoom = value;
        this.layout.scale(value / 100);
        this.view.renderAll();
    }
    get spacing_sections() {
        const c = this.rectBlock.get('spacing_sections');
        return c.controls;
    }
    get sections() {
        return this.rectBlock.value.sections;
    }
    get curved_chairs() {
        const c = this.curvedBlock.get('chairs');
        return c.controls;
    }
    get curved_rows() {
        return this.curvedBlock.value.rows;
    }
    create() {
        this.layout.selectable = true;
        this.layout.scale(1);
        this.dialogRef.close(this.layout);
    }
    cancel() {
        this.dialogRef.close();
    }
    toRadians(angle) {
        return angle * (Math.PI / 180);
    }
    toDegrees(radian) {
        return radian * (180 / Math.PI);
    }
}
ChairsLayoutComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: ChairsLayoutComponent, deps: [{ token: i1.MatDialogRef }], target: i0.ɵɵFactoryTarget.Component });
ChairsLayoutComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.12", type: ChairsLayoutComponent, selector: "pointless-chairs-layout", ngImport: i0, template: "<div class=\"layout-chairs\">\r\n  <div>\r\n    <div class=\"layout-type flex-design\">\r\n      <mat-radio-group\r\n            aria-label=\"Select an layout\"\r\n            [ngModel]=\"layoutOption\"\r\n            (ngModelChange)=\"layoutOptionChanged($event)\">\r\n        <mat-radio-button value=\"NORMAL\">Normal</mat-radio-button>\r\n        <mat-radio-button value=\"CURVED\">Curved</mat-radio-button>\r\n      </mat-radio-group>\r\n      <app-zoom (zoomChange)=\"onZoom($event)\" [zoom]=\"zoom\"></app-zoom>\r\n    </div>\r\n    <form *ngIf=\"layoutOption === 'CURVED'\" [formGroup]=\"curvedBlock\" class=\"flex-design\">\r\n      <div>\r\n        <mat-form-field>\r\n          <mat-label>Select Chair</mat-label>\r\n          <mat-select formControlName=\"chair\">\r\n            <mat-option *ngFor=\"let chair of chairs; let i=index;\" [value]=\"i\">{{chair.title}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"flex-design\">\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"1\" max=\"5\" formControlName=\"rows\" matInput placeholder=\"Number of Rounds\">\r\n            <mat-label>Between 1 to 5</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"50\" max=\"500\" formControlName=\"radius\" matInput placeholder=\"Radius(px)\">\r\n            <mat-label>Between 50 to 500</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"10\" max=\"360\" formControlName=\"angle\" matInput placeholder=\"Angle\">\r\n            <mat-label>Between 10 to 360</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"10\" max=\"50\" formControlName=\"spacing_row\" matInput\r\n              placeholder=\"Spacing between Rounds\">\r\n            <mat-label>Between 10 to 50</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <p>Number of chairs in rows</p>\r\n        <form formArrayName=\"chairs\" >\r\n          <div class=\"layout-option\" *ngFor=\"let n of curved_chairs | slice:0:curved_rows; let i=index\">\r\n            <mat-form-field>\r\n              <input matInput [formControlName]=\"i\" type=\"number\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </form>\r\n    <form *ngIf=\"layoutOption === 'NORMAL'\" [formGroup]=\"rectBlock\" class='flex-design'>\r\n      <div>\r\n        <mat-form-field>\r\n          <mat-label>Select Chair</mat-label>\r\n          <mat-select formControlName=\"chair\">\r\n            <mat-option *ngFor=\"let chair of chairs; let i=index;\" [value]=\"i\">{{chair.title}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div >\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <mat-label>Sections</mat-label>\r\n            <mat-select formControlName=\"sections\">\r\n              <mat-option *ngFor=\"let opt of [1, 2, 3, 4]; let i=index;\" [value]=\"opt\">{{opt}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"1\" max=\"50\" formControlName=\"rows\" matInput placeholder=\"Rows\">\r\n            <mat-label>Between 1 to 50</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" formControlName=\"chairs\" min=\"1\" matInput placeholder=\"Chairs in a row\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"0\" max=\"6\" formControlName=\"spacing_chair\" matInput\r\n              placeholder=\"Spacing between chairs(px)\">\r\n            <mat-label>Between 0 to 6</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"0\" formControlName=\"spacing_row\" matInput placeholder=\"Spacing between rows(px)\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"sections > 1\">\r\n        <p>Spacing between sections</p>\r\n        <form formArrayName=\"spacing_sections\" fxLayout fxLayoutGap=\"20px\">\r\n          <div class=\"layout-option\" *ngFor=\"let sec of spacing_sections | slice:0:sections-1; let i=index\">\r\n            <mat-form-field>\r\n              <input type=\"number\" matInput [formControlName]=\"i\" >\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <div>\r\n    <canvas id=\"layout_chairs\"></canvas>\r\n  </div>\r\n\r\n  <div style=\"margin-top: 1rem\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"create()\">Create</button>\r\n    <button style=\"margin-left: 1rem\" mat-button color=\"primary\" (click)=\"cancel()\">Cancel</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"curvedBlock\">\r\n    {{curvedBlock.value}}\r\n  </div>\r\n  <div *ngIf=\"rectBlock\">\r\n    {{rectBlock.value}}\r\n  </div>\r\n</div>\r\n", styles: [".layout-chairs .layout-type{padding:24px 0}.layout-chairs .layout-type mat-radio-button{margin-right:24px}.layout-chairs label{display:block;margin-bottom:5px;font-size:16px}.layout-chairs span{display:block;font-size:12px;color:#555}.layout-chairs .layout-option{margin-bottom:1rem}.layout-chairs canvas{border:1px solid #ececec;border-radius:3px}.layout-chairs p{margin-bottom:0}.flex-design{display:flex;flex-direction:column;align-content:space-between;gap:10px}\n"], components: [{ type: i2.MatRadioButton, selector: "mat-radio-button", inputs: ["disableRipple", "tabIndex"], exportAs: ["matRadioButton"] }, { type: i3.ZoomComponent, selector: "app-zoom", inputs: ["zoom"], outputs: ["zoomChange"] }, { type: i4.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { type: i5.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex"], exportAs: ["matSelect"] }, { type: i6.MatOption, selector: "mat-option", exportAs: ["matOption"] }, { type: i7.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i2.MatRadioGroup, selector: "mat-radio-group", exportAs: ["matRadioGroup"] }, { type: i8.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i8.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i9.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i8.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i8.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i8.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.MatLabel, selector: "mat-label" }, { type: i8.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { type: i9.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i8.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { type: i8.MaxValidator, selector: "input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]", inputs: ["max"] }, { type: i8.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { type: i8.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i10.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { type: i8.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i8.FormArrayName, selector: "[formArrayName]", inputs: ["formArrayName"] }], pipes: { "slice": i9.SlicePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: ChairsLayoutComponent, decorators: [{
            type: Component,
            args: [{ selector: 'pointless-chairs-layout', template: "<div class=\"layout-chairs\">\r\n  <div>\r\n    <div class=\"layout-type flex-design\">\r\n      <mat-radio-group\r\n            aria-label=\"Select an layout\"\r\n            [ngModel]=\"layoutOption\"\r\n            (ngModelChange)=\"layoutOptionChanged($event)\">\r\n        <mat-radio-button value=\"NORMAL\">Normal</mat-radio-button>\r\n        <mat-radio-button value=\"CURVED\">Curved</mat-radio-button>\r\n      </mat-radio-group>\r\n      <app-zoom (zoomChange)=\"onZoom($event)\" [zoom]=\"zoom\"></app-zoom>\r\n    </div>\r\n    <form *ngIf=\"layoutOption === 'CURVED'\" [formGroup]=\"curvedBlock\" class=\"flex-design\">\r\n      <div>\r\n        <mat-form-field>\r\n          <mat-label>Select Chair</mat-label>\r\n          <mat-select formControlName=\"chair\">\r\n            <mat-option *ngFor=\"let chair of chairs; let i=index;\" [value]=\"i\">{{chair.title}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"flex-design\">\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"1\" max=\"5\" formControlName=\"rows\" matInput placeholder=\"Number of Rounds\">\r\n            <mat-label>Between 1 to 5</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"50\" max=\"500\" formControlName=\"radius\" matInput placeholder=\"Radius(px)\">\r\n            <mat-label>Between 50 to 500</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"10\" max=\"360\" formControlName=\"angle\" matInput placeholder=\"Angle\">\r\n            <mat-label>Between 10 to 360</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"10\" max=\"50\" formControlName=\"spacing_row\" matInput\r\n              placeholder=\"Spacing between Rounds\">\r\n            <mat-label>Between 10 to 50</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <p>Number of chairs in rows</p>\r\n        <form formArrayName=\"chairs\" >\r\n          <div class=\"layout-option\" *ngFor=\"let n of curved_chairs | slice:0:curved_rows; let i=index\">\r\n            <mat-form-field>\r\n              <input matInput [formControlName]=\"i\" type=\"number\">\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </form>\r\n    <form *ngIf=\"layoutOption === 'NORMAL'\" [formGroup]=\"rectBlock\" class='flex-design'>\r\n      <div>\r\n        <mat-form-field>\r\n          <mat-label>Select Chair</mat-label>\r\n          <mat-select formControlName=\"chair\">\r\n            <mat-option *ngFor=\"let chair of chairs; let i=index;\" [value]=\"i\">{{chair.title}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div >\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <mat-label>Sections</mat-label>\r\n            <mat-select formControlName=\"sections\">\r\n              <mat-option *ngFor=\"let opt of [1, 2, 3, 4]; let i=index;\" [value]=\"opt\">{{opt}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"1\" max=\"50\" formControlName=\"rows\" matInput placeholder=\"Rows\">\r\n            <mat-label>Between 1 to 50</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" formControlName=\"chairs\" min=\"1\" matInput placeholder=\"Chairs in a row\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"layout-option\">\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"0\" max=\"6\" formControlName=\"spacing_chair\" matInput\r\n              placeholder=\"Spacing between chairs(px)\">\r\n            <mat-label>Between 0 to 6</mat-label>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field>\r\n            <input type=\"number\" min=\"0\" formControlName=\"spacing_row\" matInput placeholder=\"Spacing between rows(px)\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"sections > 1\">\r\n        <p>Spacing between sections</p>\r\n        <form formArrayName=\"spacing_sections\" fxLayout fxLayoutGap=\"20px\">\r\n          <div class=\"layout-option\" *ngFor=\"let sec of spacing_sections | slice:0:sections-1; let i=index\">\r\n            <mat-form-field>\r\n              <input type=\"number\" matInput [formControlName]=\"i\" >\r\n            </mat-form-field>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <div>\r\n    <canvas id=\"layout_chairs\"></canvas>\r\n  </div>\r\n\r\n  <div style=\"margin-top: 1rem\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"create()\">Create</button>\r\n    <button style=\"margin-left: 1rem\" mat-button color=\"primary\" (click)=\"cancel()\">Cancel</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"curvedBlock\">\r\n    {{curvedBlock.value}}\r\n  </div>\r\n  <div *ngIf=\"rectBlock\">\r\n    {{rectBlock.value}}\r\n  </div>\r\n</div>\r\n", styles: [".layout-chairs .layout-type{padding:24px 0}.layout-chairs .layout-type mat-radio-button{margin-right:24px}.layout-chairs label{display:block;margin-bottom:5px;font-size:16px}.layout-chairs span{display:block;font-size:12px;color:#555}.layout-chairs .layout-option{margin-bottom:1rem}.layout-chairs canvas{border:1px solid #ececec;border-radius:3px}.layout-chairs p{margin-bottom:0}.flex-design{display:flex;flex-direction:column;align-content:space-between;gap:10px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.MatDialogRef }]; } });
//# sourceMappingURL=data:application/json;base64,