import { Component, EventEmitter, Input, Output } from '@angular/core';
import { library } from '@fortawesome/fontawesome-svg-core';
import { faReply, faShare, faClone, faTrash, faUndo, faRedo, faObjectGroup, faObjectUngroup, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';
import { FURNISHINGS } from './models/furnishings';
import { ChairsLayoutComponent } from './components/chairs-layout/chairs-layout.component';
import { delay, repeatWhen } from 'rxjs/operators';
import * as uuid from 'uuid';
import * as i0 from "@angular/core";
import * as i1 from "./app.service";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/dialog";
import * as i4 from "@angular/material/toolbar";
import * as i5 from "@angular/material/button";
import * as i6 from "@angular/material/sidenav";
import * as i7 from "@angular/material/expansion";
import * as i8 from "@angular/material/list";
import * as i9 from "@angular/material/divider";
import * as i10 from "./components/preview-furniture/preview-furniture.component";
import * as i11 from "@angular/material/form-field";
import * as i12 from "@angular/material/select";
import * as i13 from "@angular/material/core";
import * as i14 from "@angular/material/radio";
import * as i15 from "@fortawesome/angular-fontawesome";
import * as i16 from "@angular/material/menu";
import * as i17 from "./shared/components/zoom/zoom.component";
import * as i18 from "./components/view/view.component";
import * as i19 from "@angular/common";
import * as i20 from "@angular/material/input";
import * as i21 from "@angular/cdk/text-field";
import * as i22 from "@angular/material/tooltip";
library.add(faReply, faShare, faClone, faTrash, faUndo, faRedo, faObjectGroup, faObjectUngroup, faMinus, faPlus);
export class RoomLayoutDesignerComponent {
    constructor(app, fb, dialog) {
        this.app = app;
        this.fb = fb;
        this.dialog = dialog;
        // @Input() _userMode: Subject<boolean>;
        this.userMode = false;
        this.outPutOrderSelected = new EventEmitter(); // {uuid: string, orderID: string, name: string}
        this.outPutTemplate = new EventEmitter(); // {id: number, name: string, jsonTEmplate}
        this.outPutLayoutTable = new EventEmitter();
        // currentLayout : any;
        this.title = 'room-layout';
        this.init = false;
        this.furnishings = FURNISHINGS;
        this.defaultChairIndex = 0;
        this.previewItem = null;
        this.previewType = null;
        // icons
        this.faReply = faReply;
        this.faShare = faShare;
        this.faClone = faClone;
        this.faTrash = faTrash;
        this.faUndo = faUndo;
        this.faRedo = faRedo;
        this.faObjectGroup = faObjectGroup;
        this.faObjectUngroup = faObjectUngroup;
        this.faPlus = faPlus;
        this.faMinus = faMinus;
    }
    ngOnInit() {
        const defaultChair = FURNISHINGS.chairs[0];
        setTimeout(() => {
            this.app.defaultChair.next(defaultChair);
            this.init = true;
        }, 100);
        this.initTextForm();
        this.intJSONTemplateSubscriber();
        this.initJSONTemplateList();
    }
    initJSONTemplateList() {
        this._jsonTemplateLists.subscribe(data => {
            this.jsonTemplateLists = data;
        });
    }
    intJSONTemplateSubscriber() {
        this._jsonValue = this.app.jsonValue.subscribe(data => {
            if (this.isJsonStructure(data)) {
                this.jsonValue = data;
                return;
            }
            this.jsonValue = JSON.stringify(data);
            return;
        });
    }
    initUserModeSubscriber() {
        this._userMode.subscribe(v => {
            this.toggleMode();
        });
    }
    initTaleLayoutList() {
    }
    selectItem(item) {
        this.outPutLayoutTable.emit(item);
    }
    selectOrder(item) {
        this.outPutOrderSelected.emit(item);
    }
    selectTableLayout(item) {
        this.outPutLayoutTable.emit(item);
    }
    insert(object, type) {
        if (this.app.roomEdit) {
            return;
        }
        const id = uuid.v4();
        object.name = id;
        this.app.insertObject.next({ type, object });
    }
    defaultChairChanged(index) {
        this.defaultChairIndex = index;
        this.app.defaultChair.next(FURNISHINGS.chairs[index]);
    }
    initTextForm() {
        this.textForm = this.fb.group({
            text: ['New Text'],
            font_size: [16],
            direction: ['HORIZONTAL']
        });
    }
    insertNewText() {
        this.insert({ ...this.textForm.value, name: 'TEXT:Text' }, 'TEXT');
    }
    layoutChairs() {
        const ref = this.dialog.open(ChairsLayoutComponent);
        ref.afterClosed().subscribe(res => {
            if (!res) {
                return;
            }
            this.insert(res, 'LAYOUT');
        });
    }
    getCurrentFabricLayout() {
        this.app.performOperation.next('json');
    }
    setOrderID() {
        //assign the orderid to the current selected order.
        this.app.setOrder('131390');
    }
    loadJSON() {
        try {
            this.app.loadJson(this.jsonValue);
        }
        catch (error) {
            console.log(error);
        }
    }
    clearLayout() {
        this.app.clearLayout();
    }
    isJsonStructure(str) {
        if (typeof str !== 'string')
            return false;
        try {
            const result = JSON.parse(str);
            const type = Object.prototype.toString.call(result);
            return type === '[object Object]'
                || type === '[object Array]';
        }
        catch (err) {
            return false;
        }
    }
    onZoom(value) {
        this.app.zoom = value;
        this.app.performOperation.next('ZOOM');
    }
    toggleMode() {
        this.userMode = !this.userMode;
        this.app.userMode = this.userMode;
        this.app.roomEdit = !this.userMode;
        this.loadJSON();
    }
    disableLayout() {
        this.app.disableSeletion();
    }
    displayLayout(item) {
        if (!this.userMode) {
            return;
        }
        if (item) {
            if (item.id) {
                this.app.disableSeletion();
                // this.currentLayout = item;
            }
        }
    }
    // refreshCurrentList() {
    //   //use the same feature as the current order refresh.
    //   if (!this.userMode) { return }
    //   if (this.currentLayout) {
    //   }
    // }
    refreshObservable(item$) {
        if (!this.userMode) {
            return;
        }
        item$.pipe(repeatWhen(x => x.pipe(delay(3500)))).subscribe(data => {
            // this.orderService.updateOrderSubscription(data)
        });
    }
}
RoomLayoutDesignerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.4", ngImport: i0, type: RoomLayoutDesignerComponent, deps: [{ token: i1.AppService }, { token: i2.FormBuilder }, { token: i3.MatDialog }], target: i0.ɵɵFactoryTarget.Component });
RoomLayoutDesignerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.4", type: RoomLayoutDesignerComponent, selector: "pointless-room-layout-designer", inputs: { _userMode: "_userMode", userMode: "userMode", _jsonTemplateLists: "_jsonTemplateLists", jsonTemplate: "jsonTemplate", orderID: "orderID" }, outputs: { outPutOrderSelected: "outPutOrderSelected", outPutTemplate: "outPutTemplate", outPutLayoutTable: "outPutLayoutTable" }, ngImport: i0, template: "<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <!-- <h1>Layout</h1> -->\r\n    <div class=\"layout-options-grid\" *ngIf=\"jsonTemplateLists; else jsonTemplates\">\r\n      Templates\r\n      <div *ngFor=\"let item of jsonTemplateLists\" >\r\n        <button mat-raised-button (click)=\"displayLayout(item)\">{{item.name}}</button>\r\n      </div>\r\n    </div>\r\n    <button mat-raised-button (click)=\"toggleMode()\">Toggle Mode</button>\r\n    <button mat-raised-button (click)=\"disableLayout()\">Disable Edit</button>\r\n    <ng-template #jsonTemplates>...loading</ng-template>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<mat-drawer-container hasBackdrop=\"false\">\r\n\r\n  <mat-drawer *ngIf=\"!userMode\" #drawer mode=\"side\" opened>\r\n    <mat-accordion class=\"rl-object-options\">\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Rooms\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-list>\r\n          <mat-divider></mat-divider>\r\n          <ng-container *ngFor=\"let room of furnishings.rooms\">\r\n            <mat-list-item (click)=\"insert(room, 'ROOM')\">\r\n              {{room.title}}\r\n            </mat-list-item>\r\n            <mat-divider></mat-divider>\r\n          </ng-container>\r\n        </mat-list>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Doors\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let door of furnishings.doors\">\r\n            <div (click)=\"insert(door, 'DOOR')\">\r\n              <pointless-preview-furniture [type]=\"'DOOR'\" [furniture]=\"door\"></pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{door.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Windows\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let window of furnishings.windows\">\r\n            <div (click)=\"insert(window, 'WINDOW')\">\r\n                <pointless-preview-furniture\r\n                    [type]=\"'WINDOW'\"\r\n                    [furniture]=\"window\">\r\n                </pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{window.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Tables\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <mat-form-field>\r\n          <mat-label>Default Chair</mat-label>\r\n          <mat-select [value]=\"defaultChairIndex\"\r\n                      (valueChange)=\"defaultChairChanged($event)\">\r\n            <mat-option *ngFor=\"let chair of furnishings.chairs; let i=index;\"\r\n                        [value]=\"i\">\r\n                {{chair.title}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let table of furnishings.tables\">\r\n            <div (click)=\"insert(table, 'TABLE')\">\r\n              <pointless-preview-furniture\r\n                  [type]=\"'TABLE'\"\r\n                  [furniture]=\"table\">\r\n              </pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{table.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Chairs\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let chair of furnishings.chairs\">\r\n            <div (click)=\"insert(chair, 'CHAIR')\">\r\n              <pointless-preview-furniture\r\n                  [type]=\"'CHAIR'\"\r\n                  [furniture]=\"chair\">\r\n              </pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{chair.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Miscellaneous\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let m of furnishings.miscellaneous\">\r\n            <div (click)=\"insert(m, 'MISCELLANEOUS')\">\r\n              <pointless-preview-furniture\r\n                  [type]=\"'MISCELLANEOUS'\"\r\n                  [furniture]=\"m\">\r\n              </pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{m.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Text\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <form [formGroup]=\"textForm\"\r\n              class=\"new-text\"\r\n              (ngSubmit)=\"insertNewText()\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Input text\" formControlName=\"text\">\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <input matInput type=\"number\"\r\n                   placeholder=\"Font Size\"\r\n                   min=\"1\"\r\n                   max=\"200\"\r\n                   formControlName=\"font_size\">\r\n          </mat-form-field>\r\n          <div style=\"margin: 1rem 0\">\r\n            <mat-radio-group formControlName=\"direction\">\r\n              <mat-radio-button value=\"HORIZONTAL\">Horizontal</mat-radio-button>\r\n              <mat-radio-button value=\"VERTICAL\">Vertical</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div style=\"margin: 2rem 12px\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">Add text</button>\r\n          </div>\r\n        </form>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Advanced\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div style=\"padding: 2rem\">\r\n          <button mat-raised-button\r\n                  color=\"primary\"\r\n                  style=\"width: 100%\"\r\n                  (click)=\"layoutChairs()\">\r\n            Layout chairs\r\n          </button>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <div >\r\n        <button mat-raised-button color=\"primary\" (click)=\"getCurrentFabricLayout()\">Save Layout</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"loadJSON()\">Load Layout</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"clearLayout()\">Clear Layout</button>\r\n      </div>\r\n\r\n      <div class=\"example-full-width\">\r\n        <mat-form-field  appearance=\"fill\">\r\n          <mat-label>JSON Result</mat-label>\r\n          <textarea  cdkTextareaAutosize\r\n                     matInput\r\n                     [(ngModel)]=\"jsonValue\"\r\n                     placeholder=\"JSON Result\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n        <mat-label >OrderID</mat-label>\r\n        <input matInput\r\n              type=\"text\"\r\n              [(ngModel)]=\"app.orderID\"\r\n              class=\"form-control\" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"app.setOrder('131390')\">Set Order #</button>\r\n      </div>\r\n      <div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"app.setObjectFillColor('red')\">Set Red</button>\r\n      </div>\r\n      <div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"app.setObjectFillColor('green')\">Set  Green</button>\r\n      </div>\r\n    </mat-accordion>\r\n  </mat-drawer>\r\n\r\n  <mat-drawer-content>\r\n\r\n    <mat-toolbar  *ngIf=\"!userMode\" >\r\n      <mat-toolbar-row>\r\n        <div *ngIf=\"init\">\r\n          <ng-container *ngIf=\"!app.roomEdit\">\r\n            <button mat-icon-button matTooltip=\"Undo (Ctrl + Z)\" (click)=\"app.undo()\"\r\n              [disabled]=\"app.states.length === 1\">\r\n              <fa-icon [icon]=\"faReply\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Redo (Ctrl + Shift + Z)\" (click)=\"app.redo()\"\r\n              [disabled]=\"app.redoStates.length === 0\">\r\n              <fa-icon [icon]=\"faShare\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Clone (Ctrl + D)\" [disabled]=\"app.selections.length === 0\"\r\n              (click)=\"app.clone()\">\r\n              <fa-icon [icon]=\"faClone\"></fa-icon>\r\n            </button>\r\n            <!--  -->\r\n            <button mat-icon-button matTooltip=\"Delete (Delete)\" [disabled]=\"app.selections.length === 0\"\r\n              (click)=\"app.delete()\">\r\n              <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Rotate Anti-Clockwise (Ctrl + Left Arrow)\"\r\n              [disabled]=\"app.selections.length === 0\" (click)=\"app.rotateAntiClockWise()\">\r\n              <fa-icon [icon]=\"faUndo\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Rotate Clockwise (Ctrl + Right Arrow)\"\r\n              [disabled]=\"app.selections.length === 0\" (click)=\"app.rotateClockWise()\">\r\n              <fa-icon [icon]=\"faRedo\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Group (Ctrl + G)\" [disabled]=\"app.selections.length < 2\"\r\n              (click)=\"app.group()\">\r\n              <fa-icon [icon]=\"faObjectGroup\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Ungroup (Ctrl + E)\" [disabled]=\"!app.ungroupable\"\r\n              (click)=\"app.ungroup()\">\r\n              <fa-icon [icon]=\"faObjectUngroup\"></fa-icon>\r\n            </button>\r\n            <button mat-button matTooltip=\"Arrange\" [matMenuTriggerFor]=\"arrange\">Arrange</button>\r\n            <button mat-raised-button matTooltip=\"Switch Edition Mode\" color=\"primary\"\r\n                    (click)=\"app.editRoom()\">Edit\r\n              Room</button>\r\n\r\n            <button mat-raised-button matTooltip=\"Switch Edition Mode\" color=\"primary\"\r\n                   (click)=\"app.setObjectFillColor('red')\">\r\n              Set Red\r\n            </button>\r\n\r\n          </ng-container>\r\n          <ng-container *ngIf=\"app.roomEdit\">\r\n            <button mat-icon-button matTooltip=\"Undo (Ctrl + Z)\" (click)=\"app.undo()\"\r\n              [disabled]=\"app.roomEditStates.length === 1\">\r\n              <fa-icon [icon]=\"faReply\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Redo (Ctrl + Shift + Z)\" (click)=\"app.redo()\"\r\n              [disabled]=\"app.roomEditRedoStates.length === 0\">\r\n              <fa-icon [icon]=\"faShare\"></fa-icon>\r\n            </button>\r\n            <button mat-button matTooltip=\"Switch Edition Mode\" color=\"primary\" *ngIf=\"app.roomEdit\"\r\n              (click)=\"app.endEditRoom()\">End Room Edition</button>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <mat-menu #arrange=\"matMenu\">\r\n          <ng-template matMenuContent>\r\n            <button mat-menu-item (click)=\"app.arrange('LEFT')\" [disabled]=\"app.selections.length < 2\">Arrange Left</button>\r\n            <button mat-menu-item (click)=\"app.arrange('CENTER')\" [disabled]=\"app.selections.length < 2\">Arrange Center</button>\r\n            <button mat-menu-item (click)=\"app.arrange('RIGHT')\" [disabled]=\"app.selections.length < 2\">Arrange Right</button>\r\n            <button mat-menu-item (click)=\"app.arrange('TOP')\" [disabled]=\"app.selections.length < 2\">Arrange Top</button>\r\n            <button mat-menu-item (click)=\"app.arrange('MIDDLE')\" [disabled]=\"app.selections.length < 2\">Arrange Middle</button>\r\n            <button mat-menu-item (click)=\"app.arrange('BOTTOM')\" [disabled]=\"app.selections.length < 2\">Arrange Bottom</button>\r\n            <button mat-menu-item (click)=\"app.placeInCenter('HORIZONTAL')\">Center Horizontally</button>\r\n            <button mat-menu-item (click)=\"app.placeInCenter('VERTICAL')\">Center Vertically</button>\r\n          </ng-template>\r\n        </mat-menu>\r\n        <app-zoom (zoomChange)=\"onZoom($event)\" [zoom]=\"app.zoom\"></app-zoom>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <pointless-room-layout-view\r\n        (outPutSelectedItem)=\"selectItem($event)\"\r\n        [userMode]=\"userMode\">\r\n    </pointless-room-layout-view>\r\n\r\n    <table  *ngIf=\"!userMode\" class=\"status-bar\">\r\n      <tbody>\r\n        <tr class=\"status-bar-item\">\r\n          <td>Type</td>\r\n          <td>ID</td>\r\n          <td>Name</td>\r\n          <td>Left</td>\r\n          <td>Top</td>\r\n          <td>Rotation</td>\r\n          <td>Width</td>\r\n          <td>Height</td>\r\n          <td></td>\r\n        </tr>\r\n        <tr class=\"status-bar-item\" *ngFor=\"let selected of app.selections\">\r\n          <td><strong *ngIf=\"selected.name\">{{selected.name.split(';')[0] | titlecase}}</strong></td>\r\n          <td><strong *ngIf=\"selected.name\">{{selected.name.split(';')[1]}}</strong></td>\r\n          <td><strong *ngIf=\"selected.name\">{{selected.name.split(';')[2]}}</strong></td>\r\n          <td><strong>{{selected.left}}</strong></td>\r\n          <td><strong>{{selected.top}}</strong></td>\r\n          <td><strong>{{selected.angle}}'</strong></td>\r\n          <td><strong>{{selected.width}}</strong></td>\r\n          <td><strong>{{selected.height}}</strong></td>\r\n          <td>\r\n            <strong *ngIf=\"selected.name.split(':')[0] == 'TABLE'\">\r\n              {{selected._objects.length - 1}} Chairs\r\n            </strong>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n", styles: ["mat-drawer{width:350px}mat-drawer-container{height:calc(100% - 64px)}.preview-layout{display:flex;flex-wrap:wrap;justify-content:space-between;padding:8px}.preview-layout .preview-item{padding:8px;cursor:pointer}.preview-layout .preview-item:hover{background:white;box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f}.preview-layout .preview-title{margin-top:8px;text-align:center}.status-bar{border-top:1px solid rgba(0,0,0,.12);background:#ececec;min-height:79px;width:100%}.status-bar .status-bar-item td{padding:10px;border-bottom:1px solid rgba(0,0,0,.12)}.status-bar .status-bar-item span{margin-right:15px}.new-text mat-radio-group{padding-left:12px}.new-text mat-radio-group mat-radio-button{margin-right:16px}.layout-options-grid{display:flex;flex-direction:row;margin:10px}mat-toolbar-row{justify-content:space-between}button{margin:10px}.example-full-width{max-height:200px;overflow-y:auto;overflow-x:hidden}\n"], components: [{ type: i4.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { type: i5.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i6.MatDrawerContainer, selector: "mat-drawer-container", inputs: ["autosize", "hasBackdrop"], outputs: ["backdropClick"], exportAs: ["matDrawerContainer"] }, { type: i6.MatDrawer, selector: "mat-drawer", inputs: ["position", "mode", "disableClose", "autoFocus", "opened"], outputs: ["openedChange", "opened", "openedStart", "closed", "closedStart", "positionChanged"], exportAs: ["matDrawer"] }, { type: i7.MatExpansionPanel, selector: "mat-expansion-panel", inputs: ["disabled", "expanded", "hideToggle", "togglePosition"], outputs: ["opened", "closed", "expandedChange", "afterExpand", "afterCollapse"], exportAs: ["matExpansionPanel"] }, { type: i7.MatExpansionPanelHeader, selector: "mat-expansion-panel-header", inputs: ["tabIndex", "expandedHeight", "collapsedHeight"] }, { type: i8.MatList, selector: "mat-list, mat-action-list", inputs: ["disableRipple", "disabled"], exportAs: ["matList"] }, { type: i9.MatDivider, selector: "mat-divider", inputs: ["vertical", "inset"] }, { type: i8.MatListItem, selector: "mat-list-item, a[mat-list-item], button[mat-list-item]", inputs: ["disableRipple", "disabled"], exportAs: ["matListItem"] }, { type: i10.PreviewFurnitureComponent, selector: "pointless-preview-furniture", inputs: ["type", "furniture"] }, { type: i11.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { type: i12.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex"], exportAs: ["matSelect"] }, { type: i13.MatOption, selector: "mat-option", exportAs: ["matOption"] }, { type: i14.MatRadioButton, selector: "mat-radio-button", inputs: ["disableRipple", "tabIndex"], exportAs: ["matRadioButton"] }, { type: i6.MatDrawerContent, selector: "mat-drawer-content" }, { type: i15.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }, { type: i16.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { type: i16.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }, { type: i17.ZoomComponent, selector: "app-zoom", inputs: ["zoom"], outputs: ["zoomChange"] }, { type: i18.ViewComponent, selector: "pointless-room-layout-view", inputs: ["userMode"], outputs: ["outPutSelectedItem"] }], directives: [{ type: i4.MatToolbarRow, selector: "mat-toolbar-row", exportAs: ["matToolbarRow"] }, { type: i19.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i19.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i7.MatAccordion, selector: "mat-accordion", inputs: ["multi", "hideToggle", "displayMode", "togglePosition"], exportAs: ["matAccordion"] }, { type: i7.MatExpansionPanelTitle, selector: "mat-panel-title" }, { type: i11.MatLabel, selector: "mat-label" }, { type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i20.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { type: i2.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { type: i2.MaxValidator, selector: "input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]", inputs: ["max"] }, { type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { type: i14.MatRadioGroup, selector: "mat-radio-group", exportAs: ["matRadioGroup"] }, { type: i21.CdkTextareaAutosize, selector: "textarea[cdkTextareaAutosize]", inputs: ["cdkAutosizeMinRows", "cdkAutosizeMaxRows", "cdkTextareaAutosize", "placeholder"], exportAs: ["cdkTextareaAutosize"] }, { type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i22.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { type: i16.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { type: i16.MatMenuContent, selector: "ng-template[matMenuContent]" }], pipes: { "titlecase": i19.TitleCasePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.4", ngImport: i0, type: RoomLayoutDesignerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'pointless-room-layout-designer', template: "<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <!-- <h1>Layout</h1> -->\r\n    <div class=\"layout-options-grid\" *ngIf=\"jsonTemplateLists; else jsonTemplates\">\r\n      Templates\r\n      <div *ngFor=\"let item of jsonTemplateLists\" >\r\n        <button mat-raised-button (click)=\"displayLayout(item)\">{{item.name}}</button>\r\n      </div>\r\n    </div>\r\n    <button mat-raised-button (click)=\"toggleMode()\">Toggle Mode</button>\r\n    <button mat-raised-button (click)=\"disableLayout()\">Disable Edit</button>\r\n    <ng-template #jsonTemplates>...loading</ng-template>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<mat-drawer-container hasBackdrop=\"false\">\r\n\r\n  <mat-drawer *ngIf=\"!userMode\" #drawer mode=\"side\" opened>\r\n    <mat-accordion class=\"rl-object-options\">\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Rooms\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-list>\r\n          <mat-divider></mat-divider>\r\n          <ng-container *ngFor=\"let room of furnishings.rooms\">\r\n            <mat-list-item (click)=\"insert(room, 'ROOM')\">\r\n              {{room.title}}\r\n            </mat-list-item>\r\n            <mat-divider></mat-divider>\r\n          </ng-container>\r\n        </mat-list>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Doors\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let door of furnishings.doors\">\r\n            <div (click)=\"insert(door, 'DOOR')\">\r\n              <pointless-preview-furniture [type]=\"'DOOR'\" [furniture]=\"door\"></pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{door.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Windows\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let window of furnishings.windows\">\r\n            <div (click)=\"insert(window, 'WINDOW')\">\r\n                <pointless-preview-furniture\r\n                    [type]=\"'WINDOW'\"\r\n                    [furniture]=\"window\">\r\n                </pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{window.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Tables\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <mat-form-field>\r\n          <mat-label>Default Chair</mat-label>\r\n          <mat-select [value]=\"defaultChairIndex\"\r\n                      (valueChange)=\"defaultChairChanged($event)\">\r\n            <mat-option *ngFor=\"let chair of furnishings.chairs; let i=index;\"\r\n                        [value]=\"i\">\r\n                {{chair.title}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let table of furnishings.tables\">\r\n            <div (click)=\"insert(table, 'TABLE')\">\r\n              <pointless-preview-furniture\r\n                  [type]=\"'TABLE'\"\r\n                  [furniture]=\"table\">\r\n              </pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{table.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Chairs\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let chair of furnishings.chairs\">\r\n            <div (click)=\"insert(chair, 'CHAIR')\">\r\n              <pointless-preview-furniture\r\n                  [type]=\"'CHAIR'\"\r\n                  [furniture]=\"chair\">\r\n              </pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{chair.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Miscellaneous\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"preview-layout\">\r\n          <div class=\"preview-item\" *ngFor=\"let m of furnishings.miscellaneous\">\r\n            <div (click)=\"insert(m, 'MISCELLANEOUS')\">\r\n              <pointless-preview-furniture\r\n                  [type]=\"'MISCELLANEOUS'\"\r\n                  [furniture]=\"m\">\r\n              </pointless-preview-furniture>\r\n              <div class=\"preview-title\">{{m.title}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Text\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <form [formGroup]=\"textForm\"\r\n              class=\"new-text\"\r\n              (ngSubmit)=\"insertNewText()\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Input text\" formControlName=\"text\">\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <input matInput type=\"number\"\r\n                   placeholder=\"Font Size\"\r\n                   min=\"1\"\r\n                   max=\"200\"\r\n                   formControlName=\"font_size\">\r\n          </mat-form-field>\r\n          <div style=\"margin: 1rem 0\">\r\n            <mat-radio-group formControlName=\"direction\">\r\n              <mat-radio-button value=\"HORIZONTAL\">Horizontal</mat-radio-button>\r\n              <mat-radio-button value=\"VERTICAL\">Vertical</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div style=\"margin: 2rem 12px\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">Add text</button>\r\n          </div>\r\n        </form>\r\n      </mat-expansion-panel>\r\n\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Advanced\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-divider></mat-divider>\r\n        <div style=\"padding: 2rem\">\r\n          <button mat-raised-button\r\n                  color=\"primary\"\r\n                  style=\"width: 100%\"\r\n                  (click)=\"layoutChairs()\">\r\n            Layout chairs\r\n          </button>\r\n        </div>\r\n      </mat-expansion-panel>\r\n\r\n      <div >\r\n        <button mat-raised-button color=\"primary\" (click)=\"getCurrentFabricLayout()\">Save Layout</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"loadJSON()\">Load Layout</button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"clearLayout()\">Clear Layout</button>\r\n      </div>\r\n\r\n      <div class=\"example-full-width\">\r\n        <mat-form-field  appearance=\"fill\">\r\n          <mat-label>JSON Result</mat-label>\r\n          <textarea  cdkTextareaAutosize\r\n                     matInput\r\n                     [(ngModel)]=\"jsonValue\"\r\n                     placeholder=\"JSON Result\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n        <mat-label >OrderID</mat-label>\r\n        <input matInput\r\n              type=\"text\"\r\n              [(ngModel)]=\"app.orderID\"\r\n              class=\"form-control\" >\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"app.setOrder('131390')\">Set Order #</button>\r\n      </div>\r\n      <div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"app.setObjectFillColor('red')\">Set Red</button>\r\n      </div>\r\n      <div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"app.setObjectFillColor('green')\">Set  Green</button>\r\n      </div>\r\n    </mat-accordion>\r\n  </mat-drawer>\r\n\r\n  <mat-drawer-content>\r\n\r\n    <mat-toolbar  *ngIf=\"!userMode\" >\r\n      <mat-toolbar-row>\r\n        <div *ngIf=\"init\">\r\n          <ng-container *ngIf=\"!app.roomEdit\">\r\n            <button mat-icon-button matTooltip=\"Undo (Ctrl + Z)\" (click)=\"app.undo()\"\r\n              [disabled]=\"app.states.length === 1\">\r\n              <fa-icon [icon]=\"faReply\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Redo (Ctrl + Shift + Z)\" (click)=\"app.redo()\"\r\n              [disabled]=\"app.redoStates.length === 0\">\r\n              <fa-icon [icon]=\"faShare\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Clone (Ctrl + D)\" [disabled]=\"app.selections.length === 0\"\r\n              (click)=\"app.clone()\">\r\n              <fa-icon [icon]=\"faClone\"></fa-icon>\r\n            </button>\r\n            <!--  -->\r\n            <button mat-icon-button matTooltip=\"Delete (Delete)\" [disabled]=\"app.selections.length === 0\"\r\n              (click)=\"app.delete()\">\r\n              <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Rotate Anti-Clockwise (Ctrl + Left Arrow)\"\r\n              [disabled]=\"app.selections.length === 0\" (click)=\"app.rotateAntiClockWise()\">\r\n              <fa-icon [icon]=\"faUndo\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Rotate Clockwise (Ctrl + Right Arrow)\"\r\n              [disabled]=\"app.selections.length === 0\" (click)=\"app.rotateClockWise()\">\r\n              <fa-icon [icon]=\"faRedo\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Group (Ctrl + G)\" [disabled]=\"app.selections.length < 2\"\r\n              (click)=\"app.group()\">\r\n              <fa-icon [icon]=\"faObjectGroup\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Ungroup (Ctrl + E)\" [disabled]=\"!app.ungroupable\"\r\n              (click)=\"app.ungroup()\">\r\n              <fa-icon [icon]=\"faObjectUngroup\"></fa-icon>\r\n            </button>\r\n            <button mat-button matTooltip=\"Arrange\" [matMenuTriggerFor]=\"arrange\">Arrange</button>\r\n            <button mat-raised-button matTooltip=\"Switch Edition Mode\" color=\"primary\"\r\n                    (click)=\"app.editRoom()\">Edit\r\n              Room</button>\r\n\r\n            <button mat-raised-button matTooltip=\"Switch Edition Mode\" color=\"primary\"\r\n                   (click)=\"app.setObjectFillColor('red')\">\r\n              Set Red\r\n            </button>\r\n\r\n          </ng-container>\r\n          <ng-container *ngIf=\"app.roomEdit\">\r\n            <button mat-icon-button matTooltip=\"Undo (Ctrl + Z)\" (click)=\"app.undo()\"\r\n              [disabled]=\"app.roomEditStates.length === 1\">\r\n              <fa-icon [icon]=\"faReply\"></fa-icon>\r\n            </button>\r\n            <button mat-icon-button matTooltip=\"Redo (Ctrl + Shift + Z)\" (click)=\"app.redo()\"\r\n              [disabled]=\"app.roomEditRedoStates.length === 0\">\r\n              <fa-icon [icon]=\"faShare\"></fa-icon>\r\n            </button>\r\n            <button mat-button matTooltip=\"Switch Edition Mode\" color=\"primary\" *ngIf=\"app.roomEdit\"\r\n              (click)=\"app.endEditRoom()\">End Room Edition</button>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <mat-menu #arrange=\"matMenu\">\r\n          <ng-template matMenuContent>\r\n            <button mat-menu-item (click)=\"app.arrange('LEFT')\" [disabled]=\"app.selections.length < 2\">Arrange Left</button>\r\n            <button mat-menu-item (click)=\"app.arrange('CENTER')\" [disabled]=\"app.selections.length < 2\">Arrange Center</button>\r\n            <button mat-menu-item (click)=\"app.arrange('RIGHT')\" [disabled]=\"app.selections.length < 2\">Arrange Right</button>\r\n            <button mat-menu-item (click)=\"app.arrange('TOP')\" [disabled]=\"app.selections.length < 2\">Arrange Top</button>\r\n            <button mat-menu-item (click)=\"app.arrange('MIDDLE')\" [disabled]=\"app.selections.length < 2\">Arrange Middle</button>\r\n            <button mat-menu-item (click)=\"app.arrange('BOTTOM')\" [disabled]=\"app.selections.length < 2\">Arrange Bottom</button>\r\n            <button mat-menu-item (click)=\"app.placeInCenter('HORIZONTAL')\">Center Horizontally</button>\r\n            <button mat-menu-item (click)=\"app.placeInCenter('VERTICAL')\">Center Vertically</button>\r\n          </ng-template>\r\n        </mat-menu>\r\n        <app-zoom (zoomChange)=\"onZoom($event)\" [zoom]=\"app.zoom\"></app-zoom>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <pointless-room-layout-view\r\n        (outPutSelectedItem)=\"selectItem($event)\"\r\n        [userMode]=\"userMode\">\r\n    </pointless-room-layout-view>\r\n\r\n    <table  *ngIf=\"!userMode\" class=\"status-bar\">\r\n      <tbody>\r\n        <tr class=\"status-bar-item\">\r\n          <td>Type</td>\r\n          <td>ID</td>\r\n          <td>Name</td>\r\n          <td>Left</td>\r\n          <td>Top</td>\r\n          <td>Rotation</td>\r\n          <td>Width</td>\r\n          <td>Height</td>\r\n          <td></td>\r\n        </tr>\r\n        <tr class=\"status-bar-item\" *ngFor=\"let selected of app.selections\">\r\n          <td><strong *ngIf=\"selected.name\">{{selected.name.split(';')[0] | titlecase}}</strong></td>\r\n          <td><strong *ngIf=\"selected.name\">{{selected.name.split(';')[1]}}</strong></td>\r\n          <td><strong *ngIf=\"selected.name\">{{selected.name.split(';')[2]}}</strong></td>\r\n          <td><strong>{{selected.left}}</strong></td>\r\n          <td><strong>{{selected.top}}</strong></td>\r\n          <td><strong>{{selected.angle}}'</strong></td>\r\n          <td><strong>{{selected.width}}</strong></td>\r\n          <td><strong>{{selected.height}}</strong></td>\r\n          <td>\r\n            <strong *ngIf=\"selected.name.split(':')[0] == 'TABLE'\">\r\n              {{selected._objects.length - 1}} Chairs\r\n            </strong>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n", styles: ["mat-drawer{width:350px}mat-drawer-container{height:calc(100% - 64px)}.preview-layout{display:flex;flex-wrap:wrap;justify-content:space-between;padding:8px}.preview-layout .preview-item{padding:8px;cursor:pointer}.preview-layout .preview-item:hover{background:white;box-shadow:0 3px 1px -2px #0003,0 2px 2px #00000024,0 1px 5px #0000001f}.preview-layout .preview-title{margin-top:8px;text-align:center}.status-bar{border-top:1px solid rgba(0,0,0,.12);background:#ececec;min-height:79px;width:100%}.status-bar .status-bar-item td{padding:10px;border-bottom:1px solid rgba(0,0,0,.12)}.status-bar .status-bar-item span{margin-right:15px}.new-text mat-radio-group{padding-left:12px}.new-text mat-radio-group mat-radio-button{margin-right:16px}.layout-options-grid{display:flex;flex-direction:row;margin:10px}mat-toolbar-row{justify-content:space-between}button{margin:10px}.example-full-width{max-height:200px;overflow-y:auto;overflow-x:hidden}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.AppService }, { type: i2.FormBuilder }, { type: i3.MatDialog }]; }, propDecorators: { _userMode: [{
                type: Input
            }], userMode: [{
                type: Input
            }], _jsonTemplateLists: [{
                type: Input
            }], jsonTemplate: [{
                type: Input
            }], orderID: [{
                type: Input
            }], outPutOrderSelected: [{
                type: Output
            }], outPutTemplate: [{
                type: Output
            }], outPutLayoutTable: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,