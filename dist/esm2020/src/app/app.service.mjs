import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export class AppService {
    constructor() {
        this.orderID = '';
        this.roomEdit = false;
        this.states = [];
        this.redoStates = [];
        this.roomEditOperate = 'CORNER';
        this.roomEditStates = [];
        this.roomEditRedoStates = [];
        this.selections = [];
        this.ungroupable = false;
        this.selectededObject = new Subject();
        this.setSelectedObjectColor = new Subject();
        this.selectedBackGroundImage = new Subject();
        this.performOperation = new Subject();
        this.insertObject = new Subject();
        this.defaultChair = new Subject();
        this.jsonValue = new Subject();
        this.roomEdition = new Subject();
        this.saveState = new Subject();
        this.zoom = 100;
        this.saveState.subscribe(res => {
            if (this.roomEdit) {
                this.roomEditStates.push(res);
                this.roomEditRedoStates = [];
                return;
            }
            this.states.push(res);
            this.redoStates = [];
        });
    }
    editRoom() {
        this.roomEdit = true;
        this.roomEdition.next(true);
        this.performOperation.next('enableSelection');
    }
    endEditRoom() {
        this.roomEdit = false;
        this.roomEdition.next(false);
        this.performOperation.next('disableSelection');
    }
    updateCurrentObjet() {
        this.selectededObject.subscribe(data => {
            this.currenObject = data;
        });
    }
    undo() {
        if ((this.states.length === 1 && !this.roomEdit) || (this.roomEditStates.length === 1 && this.roomEdit)) {
            return;
        }
        this.performOperation.next('UNDO');
    }
    redo() {
        if ((this.redoStates.length === 0 && !this.roomEdit) || (this.roomEditRedoStates.length === 0 && this.roomEdit)) {
            return;
        }
        this.performOperation.next('REDO');
    }
    clone() {
        this.copy(true);
    }
    copy(doClone = false) {
        this.performOperation.next('COPY');
        if (doClone) {
            setTimeout(() => this.paste(), 100);
        }
    }
    //setFillColor
    setObjectFillColor(color) {
        this.setSelectedObjectColor.next(color);
    }
    paste() {
        this.performOperation.next('PASTE');
    }
    setOrder(item) {
        if (!this.selections.length) {
            return;
        }
        if (item.trim() === '') {
            this.clearNextSelectedTable = true;
        }
        if (!item) {
            this.orderID = '';
        }
        this.orderID = item;
        this.performOperation.next('setOrderID');
    }
    setTable(tableName) {
        if (!this.selections.length) {
            return;
        }
        this.performOperation.next('setTableName');
    }
    delete() {
        if (!this.selections.length) {
            return;
        }
        this.performOperation.next('DELETE');
    }
    disableSelection() {
        this.performOperation.next('disableSelection');
    }
    loadJson(value) {
        this.jsonValue.next(value);
    }
    clearLayout() {
        this.jsonValue.next(null);
        this.performOperation.next('clearLayout');
    }
    rotateAntiClockWise() {
        this.performOperation.next('ROTATE_ANTI');
    }
    rotateClockWise() {
        this.performOperation.next('ROTATE');
    }
    group() {
        this.performOperation.next('GROUP');
    }
    ungroup() {
        this.performOperation.next('UNGROUP');
    }
    placeInCenter(direction) {
        this.performOperation.next(direction);
    }
    arrange(side) {
        this.performOperation.next(side);
    }
    zoomIn() {
        if (this.zoom >= 150) {
            return;
        }
        this.zoom += 10;
        this.performOperation.next('ZOOM');
    }
    zoomOut() {
        if (this.zoom <= 20) {
            return;
        }
        this.zoom -= 10;
        this.performOperation.next('ZOOM');
    }
}
AppService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: AppService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
AppService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: AppService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: AppService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,